<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./SmartForms_files/filelist.xml">
<link rel=Edit-Time-Data href="./SmartForms_files/editdata.mso">
<link rel=OLE-Object-Data href="./SmartForms_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Smart Forms</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ARodygin</o:Author>
  <o:LastAuthor>ARodygin</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>421</o:TotalTime>
  <o:Created>2001-09-17T10:53:00Z</o:Created>
  <o:LastSaved>2001-09-17T10:59:00Z</o:LastSaved>
  <o:Pages>5</o:Pages>
  <o:Words>1069</o:Words>
  <o:Characters>6097</o:Characters>
  <o:Company>MIRANTIS</o:Company>
  <o:Lines>50</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>7487</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:ActiveWritingStyle Lang="EN-US" VendorID="64" DLLVersion="131077"
   NLCheck="1">1</w:ActiveWritingStyle>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1 -369098753 63 0 4129023 0;}
@font-face
	{font-family:"\@Arial Unicode MS";
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1 -369098753 63 0 4129023 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
code
	{mso-ascii-font-family:"Arial Unicode MS";
	mso-fareast-font-family:"Arial Unicode MS";
	mso-hansi-font-family:"Arial Unicode MS";
	mso-bidi-font-family:"Arial Unicode MS";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Arial Unicode MS";}
@page Section1
	{size:612.0pt 792.0pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1040"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style="tab-interval: 36.0pt">

<div class=Section1>

<h1 style="TEXT-ALIGN: justify"><span style="FONT-SIZE:
 14pt; FONT-STYLE: normal; mso-bidi-font-size: 12.0pt">Smart Forms have a memory…<o:p></o:p></span></h1>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></b></p>

<h1 style="TEXT-ALIGN: justify">Abstract: <span style="FONT-STYLE:
 normal; FONT-WEIGHT: normal">This article shows how easy application settings can be
maintained when the forms are smart.<o:p></o:p></span></h1>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Before we go any further please
install the package DCLSmartForm50 and add the path to Smart_Form.dcu to the Library
path. After the package is installed you can see it in the list of design-time
packages:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shapetype id=_x0000_t75 coordsize = 
"21600,21600" o:preferrelative = "t" filled = "f" stroked = "f" path = 
"m@4@5l@4@11@9@11@9@5xe" o:spt = "75"><v:stroke joinstyle = 
"miter"></v:stroke><v:formulas><v:f eqn = 
"if lineDrawn pixelLineWidth 0 "></v:f><v:f eqn = "sum @0 1 0 "></v:f><v:f eqn = 
"sum 0 0 @1 "></v:f><v:f eqn = "prod @2 1 2 "></v:f><v:f eqn = 
"prod @3 21600 pixelWidth "></v:f><v:f eqn = 
"prod @3 21600 pixelHeight "></v:f><v:f eqn = "sum @0 0 1 "></v:f><v:f eqn = 
"prod @6 1 2 "></v:f><v:f eqn = "prod @7 21600 pixelWidth "></v:f><v:f eqn = 
"sum @8 21600 0 "></v:f><v:f eqn = "prod @7 21600 pixelHeight "></v:f><v:f eqn = 
"sum @10 21600 0 "></v:f></v:formulas><v:path o:extrusionok = "f" 
gradientshapeok = "t" o:connecttype = "rect"></v:path><o:lock v:ext="edit" 
aspectratio = "t"></o:lock></v:shapetype><v:shape id=_x0000_i1025 
style="HEIGHT: 144.75pt; WIDTH: 297pt" o:ole="" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image001.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img width=396 height=193
 
  src="./SmartForms_files/image002.jpg" v:shapes="_x0000_i1025" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1062243950">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><span style="mso-spacerun:
 yes">&nbsp;</span>Those who are eager to start using smart forms right away will be
satisfied by the process of creating general application settings form, those
who are interested in improving their knowledge of Delphi may dive into the
source code of Smart_Form.pas which is about 1000 lines long. To each his own,
let’s begin.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Step 1.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Create a default application
project, save the unit as STest.pas and the project as STestProject.dpr,</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Use some method (OTA, Object
Repository or just a <a
 href="http://codecentral.borland.com/codecentral/ccweb.exe/listing?id=16471">Handy
Way to inherit forms</a>) to derive the main app form from TSmartForm. Rename
the form to SForm (it’s type will become TSForm) I’ve used&nbsp;this handy <a
 href="http://codecentral.borland.com/codecentral/ccweb.exe/listing?id=16471">Handy
Way</a> and got the following declaration in Stest unit:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=660 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 495.25pt" 
   ><pre><code><b><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></code></pre><pre><code><b>unit</b> STest;<o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>interface</b><o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>uses</b><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span>Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,<o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span>Smart_Form;<o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>type</b><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span>TSForm = <b>class</b>(TSmartForm)<o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span><b>private</b><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span><i><span
  style="COLOR: #003399">{ Private declarations }</span></i><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span><b>public</b><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span><i><span
  style="COLOR: #003399">{ Public declarations }</span></i><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span><b>end</b>;<o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>var</b><o:p></o:p></code></pre><pre><code><span style="mso-spacerun: yes">&nbsp; </span>SForm: TSForm;<o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>implementation</b><o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><i><span
  style="COLOR: #003399">{$R *.DFM}</span></i><o:p></o:p></code></pre><pre><code> <o:p></o:p></code></pre><pre><code><b>end</b>.<o:p></o:p></code></pre>
  <p class=MsoNormal style="TEXT-ALIGN: justify"><![if !supportEmptyParas]><![endif]>&nbsp;<o:p></o:p></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">As this form derives from
TsmartForm some new published properties of TsmartForm have appeared in the
Object Inspector (SavedComponents, SavedProperties, SaveName and Storage):</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1026 
style="HEIGHT: 73.5pt; WIDTH: 186.75pt" o:ole="" type = "#_x0000_t75" coordsize 
= "21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image003.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=249 height=98
 
  src="./SmartForms_files/image004.jpg" v:shapes="_x0000_i1026" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1026"
  DrawAspect="Content" ObjectID="_1062243951">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">You can right click the Object Inspector
and select arranging by categories to view all the related properties together:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1027 
style="HEIGHT: 63pt; WIDTH: 172.5pt" o:ole="" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image005.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=230 height=84
 
  src="./SmartForms_files/image006.jpg" v:shapes="_x0000_i1027" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1027"
  DrawAspect="Content" ObjectID="_1062243952">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Step 2.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Edit SavedProperties so that only
some of them will remain; I chose the following:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1028 
style="HEIGHT: 228pt; WIDTH: 327pt" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image007.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=436 height=304
 
  src="./SmartForms_files/image008.jpg" v:shapes="_x0000_i1028" ><![endif]></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Set the storage path to say
c:\temp\test.ini; do not pay attention to other properties for now:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1029 
style="HEIGHT: 63pt; WIDTH: 162.75pt" o:ole="" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image009.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=217 height=84
 
  src="./SmartForms_files/image010.jpg" v:shapes="_x0000_i1029" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1029"
  DrawAspect="Content" ObjectID="_1062243953">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Run the project and move the form
so that it’s default location changed. Run the project again and the form will appear
in the location where it was closed. See the content of test.ini:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=660 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 495.25pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1030 
      style="HEIGHT: 87.75pt; WIDTH: 129.75pt" o:ole="" type = "#_x0000_t75" 
      coordsize = "21600,21600"><v:imagedata o:title="" src = 
      "./SmartForms_files/image011.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=173 height=117
   
   src="./SmartForms_files/image012.jpg" v:shapes="_x0000_i1030" ><![endif]><!--[if gte mso 9]><xml>
   <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1030"
    DrawAspect="Content" ObjectID="_1062243954">
   </o:OLEObject>
  </xml><![endif]--></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Feel free to modify any settings
except section name and the name with ampersand.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Step 3.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Put Tmemo and TcheckBox onto the form
so that it would look like this:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1031 
style="HEIGHT: 207.75pt; WIDTH: 248.25pt" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image013.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=331 height=277
 
  src="./SmartForms_files/image014.jpg" v:shapes="_x0000_i1031" ><![endif]></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Edit the form’s SavedComponents
property, add two items, set Component property of the first to Memo1, second’s
to CheckBox1:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1032 
style="HEIGHT: 111.75pt; WIDTH: 375pt" o:ole="" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image015.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=500 height=149
 
  src="./SmartForms_files/image016.jpg" v:shapes="_x0000_i1032" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1032"
  DrawAspect="Content" ObjectID="_1062243955">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Edit each item’s Properties and
leave only Lines for Memo1<span style="mso-spacerun: yes">&nbsp; </span>and Checked
for CheckBox1.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Run the project, modify controls
state, exit and open test.ini file. Feel free to experiment with adding lines
to Memo1, setting Checked to CheckBox1, adding new controls and properties and
so on.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Actually, we have already developed
an application settings object (form) that can hold the values accessible to
other parts of the project, so that the user can change those values for
subsequent sessions. What we need now are the advanced features like saving to
different locations, saving on demand and so on.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Step 4.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Let examine the Storage property
of the form. You might be wondering in what Path property differs from
ParsedPath property of the same object. During runtime they are equal. But you
can never set ParsedPath manually, only through the Path property. For the
latter you can use such</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt" id=TABLE1>
 <tr>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.65pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >GOOD!</p>
  </td>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: medium none; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.6pt; mso-border-left-alt: solid windowtext .5pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >[APPNAME]</p>
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >[APPPATH]</p>
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >[APPDATA]</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">things to not depend on the
specified during development values. For example if you type into the Path property:
[APPPATH][APPNAME].ini, ParsedPath will reflect Delphi location in design time
letting you to check if the path was created right but in run time it will be
the path with the names of your app folder and exe. [APPDATA] is a path to
system application settings folder. You can use [APPNAME] in the path like
this:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">HKEY_CURRENT_USER\Software\[APPNAME]\Settings</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.6pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >GOOD!</p>
  </td>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: medium none; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.65pt; mso-border-left-alt: solid windowtext .5pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify">You can store settings into the
  registry as well as into any text file</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Here I can tell you what Storage Component
property is for. By default smart forms use TRegIniStorage object to access
most common locations (ini files and registry), but if it is not enough you can
write a component that descends from TStorageComponent defined in
Smart_Form.pas and implements a number of methods and when it will be placed
onto the form you will be able to set the reference to it so it will do the
work. It can be done on the fly and when the Component property of Storage
object is NIL then the default implementation will be used.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">You can use smart form events</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1033 
style="HEIGHT: 50.25pt; WIDTH: 235.5pt" o:ole="" type = "#_x0000_t75" coordsize 
= "21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image017.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=314 height=67
 
  src="./SmartForms_files/image018.jpg" v:shapes="_x0000_i1033" ><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1033"
  DrawAspect="Content" ObjectID="_1062243956">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">in conjunction with Enabled,
Component, Path properties of the Storage object to control the loading/saving
process. And you can add/delete SavedComponents items and their properties during
run time. You can set SaveName property of the form and any saved component to
define under which name it will be saved. You can set the path of different
forms to the same location and each form will be saved under it’s save name as
a section (or a key in the registry).</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.6pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >GOOD!</p>
  </td>
  <td width=330 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: medium none; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 247.65pt; mso-border-left-alt: solid windowtext .5pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify">During Save/Load operations you
  can supply and retrieve custom settings in the format of Name=Value by using
  CustomSettings property of<span style="mso-spacerun: yes">&nbsp; </span>a
  SavedComponent item.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Step 5.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Let’s add to our app settings form
the capability to be modified either by the user or internally by code so that
the changes could be saved or discarded. It’s quite simple with a smart form
like this: just call it’s EditComponents method and use the returned Boolean
value to update any variables in the code:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=351 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 263.35pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >GOOD!</p>
  </td>
  <td width=309 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: medium none; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 231.9pt; mso-border-left-alt: solid windowtext .5pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify">The copy of settings will be
  created in memory and no read/write to disk operations will be taken if the
  user cancels updates.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">To change some value in the code
and save settings use SaveComponents method.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">See Samples accompanying this
article.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Please note that in the real
application the settings form should be created invisible and it’s
EditComponents method will automatically display the form in modal state and
will update the settings modifications and set the returned value to True when
ModalResult is either mrOk or mrYes. It’s your responsibility to set the form’s
ModalResult thus closing the form. The easiest way to do it is by using BitBtn
components that have the Kind property.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b>Step 6.<o:p></o:p></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">You can store nearly all types of
settings including the references to other components and even to the
components on other forms and data modules:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<table border=1 cellspacing=0 cellpadding=0 style="BORDER-BOTTOM:
 medium none; BORDER-COLLAPSE: collapse; BORDER-LEFT: medium none; BORDER-RIGHT: medium none; BORDER-TOP: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt">
 <tr>
  <td width=660 valign=top style="BORDER-BOTTOM: windowtext 0.5pt
  solid; BORDER-LEFT: windowtext 0.5pt solid; BORDER-RIGHT: windowtext 0.5pt solid; BORDER-TOP: windowtext 0.5pt solid; PADDING-BOTTOM: 0cm; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; PADDING-TOP: 0cm; WIDTH: 495.25pt" 
   >
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >0=@DataSource1</p>
  <p class=MsoNormal style="TEXT-ALIGN: justify" 
     >1=&lt;DataSet=
  DataModule2.Table1&gt;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Just be 
careful and do not overuse this powerful thing.
Note that any component you reference in the settings must be created prior
to the form that loads these settings. So in the example above DataModule2 should be
created before the loading operation and should be destroyed after the
saving operation. It is easy to accomplish by establishing the order of form
creation in the application settings dialog:</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><!--[if gte vml 1]><v:shape id=_x0000_i1034 
style="HEIGHT: 299.25pt; WIDTH: 318pt" type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="" src = 
"./SmartForms_files/image019.png"></v:imagedata></v:shape><![endif]--><![if !vml]><img border=0 width=424 height=399
 
  src="./SmartForms_files/image020.jpg" v:shapes="_x0000_i1034" ><![endif]></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify"><b><i>Conclusion.<o:p></o:p></i></b></p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Probably you 
will find many other GOOD!s about
smart forms. You don’t have to notify me in that case (unless you decided to establish
a pension for me or at least to offer a good developer position. <span
 style 
  
="FONT-FAMILY: Wingdings; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Wingdings"><span style="mso-char-type: symbol; mso-symbol-font-family: Wingdings">J</span></span>). But if you come across any glitches 
please feel free to mail me so that I could fix them and make smart forms even 
smarter. Please note that I cannot support this project due to lack of time, thus you should refer
to the source code wherever some question arises.</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">&nbsp;</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">Alexander Rodygin</p>

<p class=MsoNormal style="TEXT-ALIGN: justify">rodigin@yahoo.com</p>

</div>

</body>

</html>
